# Workflow's name
name: 云端根据tag进行构建和上传release

# Workflow's trigger
on:
  push:
    # tags:
    #   - "v*.*.*"
    branches:
      - master 
# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron app

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      matrix:
        os: [windows-latest] # , macOS-latest, ubuntu-latest
    
    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14.15.4

      # step3: npm insta
      - name: npm install
        run: |
          yarn install

      # step4: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          yarn build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # - name: build mac app
      #   if: matrix.os == 'macOS-latest'
      #   run: |
      #     yarn run build

      # - name: build ubuntu app
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     yarn run build

      # step5: cleanup artifacts in release
      # - name: cleanup artifacts
      #   run: |
      #     npx rimraf "release/**/!(*.exe|*.dmg|*.AppImage)"
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "release/**/!(*.exe)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "release/**"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
